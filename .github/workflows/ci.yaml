# TODO improve description
name: ci
on: [push, pull_request_target]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.0

      - name: Add poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.2.1

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi --only main,tests,lints

      - name: Check by linters
        run: make lint


  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.0

      - name: Add poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.2.1

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi --only main,tests

      - name: Test
        run: make test


  build:
    needs: [test, lint]
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate docker tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=pr
            type=ref,event=branch
            type=sha,enable=${{ github.ref == format('refs/heads/{0}', 'master') && github.event_name == 'push' }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') && github.event_name == 'push' }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
